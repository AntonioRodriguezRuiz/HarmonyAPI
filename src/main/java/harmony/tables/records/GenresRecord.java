/*
 * This file is generated by jOOQ.
 */
package src.main.java.harmony.tables.records;


import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;

import src.main.java.harmony.tables.Genres;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GenresRecord extends UpdatableRecordImpl<GenresRecord> implements Record2<Integer, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>harmony.genres.genreid</code>.
     */
    public GenresRecord setGenreid(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>harmony.genres.genreid</code>.
     */
    public Integer getGenreid() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>harmony.genres.name</code>.
     */
    public GenresRecord setName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>harmony.genres.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<Integer, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<Integer, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Genres.GENRES.GENREID;
    }

    @Override
    public Field<String> field2() {
        return Genres.GENRES.NAME;
    }

    @Override
    public Integer component1() {
        return getGenreid();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public Integer value1() {
        return getGenreid();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public GenresRecord value1(Integer value) {
        setGenreid(value);
        return this;
    }

    @Override
    public GenresRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public GenresRecord values(Integer value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached GenresRecord
     */
    public GenresRecord() {
        super(Genres.GENRES);
    }

    /**
     * Create a detached, initialised GenresRecord
     */
    public GenresRecord(Integer genreid, String name) {
        super(Genres.GENRES);

        setGenreid(genreid);
        setName(name);
    }
}
