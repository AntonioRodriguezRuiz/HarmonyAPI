/*
 * This file is generated by jOOQ.
 */
package src.main.java.model.tables;


import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row3;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;

import src.main.java.model.Harmony;
import src.main.java.model.Keys;
import src.main.java.model.tables.records.VideogamesRecord;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Videogames extends TableImpl<VideogamesRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>harmony.videogames</code>
     */
    public static final Videogames VIDEOGAMES = new Videogames();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<VideogamesRecord> getRecordType() {
        return VideogamesRecord.class;
    }

    /**
     * The column <code>harmony.videogames.videogameid</code>.
     */
    public final TableField<VideogamesRecord, Integer> VIDEOGAMEID = createField(DSL.name("videogameid"), SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>harmony.videogames.mediaid</code>.
     */
    public final TableField<VideogamesRecord, Integer> MEDIAID = createField(DSL.name("mediaid"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>harmony.videogames.company</code>.
     */
    public final TableField<VideogamesRecord, String> COMPANY = createField(DSL.name("company"), SQLDataType.VARCHAR(60).nullable(false), this, "");

    private Videogames(Name alias, Table<VideogamesRecord> aliased) {
        this(alias, aliased, null);
    }

    private Videogames(Name alias, Table<VideogamesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>harmony.videogames</code> table reference
     */
    public Videogames(String alias) {
        this(DSL.name(alias), VIDEOGAMES);
    }

    /**
     * Create an aliased <code>harmony.videogames</code> table reference
     */
    public Videogames(Name alias) {
        this(alias, VIDEOGAMES);
    }

    /**
     * Create a <code>harmony.videogames</code> table reference
     */
    public Videogames() {
        this(DSL.name("videogames"), null);
    }

    public <O extends Record> Videogames(Table<O> child, ForeignKey<O, VideogamesRecord> key) {
        super(child, key, VIDEOGAMES);
    }

    @Override
    public Schema getSchema() {
        return Harmony.HARMONY;
    }

    @Override
    public Identity<VideogamesRecord, Integer> getIdentity() {
        return (Identity<VideogamesRecord, Integer>) super.getIdentity();
    }

    @Override
    public UniqueKey<VideogamesRecord> getPrimaryKey() {
        return Keys.KEY_VIDEOGAMES_PRIMARY;
    }

    @Override
    public List<UniqueKey<VideogamesRecord>> getKeys() {
        return Arrays.<UniqueKey<VideogamesRecord>>asList(Keys.KEY_VIDEOGAMES_PRIMARY, Keys.KEY_VIDEOGAMES_VIDEOGAMEID, Keys.KEY_VIDEOGAMES_MEDIAID);
    }

    @Override
    public List<ForeignKey<VideogamesRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<VideogamesRecord, ?>>asList(Keys.VIDEOGAMES_IBFK_1);
    }

    private transient Media _media;

    public Media media() {
        if (_media == null)
            _media = new Media(this, Keys.VIDEOGAMES_IBFK_1);

        return _media;
    }

    @Override
    public Videogames as(String alias) {
        return new Videogames(DSL.name(alias), this);
    }

    @Override
    public Videogames as(Name alias) {
        return new Videogames(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Videogames rename(String name) {
        return new Videogames(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Videogames rename(Name name) {
        return new Videogames(name, null);
    }

    // -------------------------------------------------------------------------
    // Row3 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row3<Integer, Integer, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }
}
